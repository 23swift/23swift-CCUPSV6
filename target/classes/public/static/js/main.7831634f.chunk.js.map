{"version":3,"sources":["components/AddEmployee.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","AddEmployee","classes","React","useState","firstLoad","setLoad","Date","selectedDate","setSelectedDate","name","setName","department","setDepartment","gender","setGender","message","setMessage","toInput","a","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","console","log","id","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","Grid","container","item","xs","TextField","required","fullWidth","value","label","autoComplete","onChange","event","target","sm","type","defaultValue","InputLabelProps","shrink","Button","color","onClick","variables","preventDefault","sampleFunc","dob","justify","to","style","table","minWidth","justifyContent","height","link","textDecoration","alignSelf","SimpleTable","data","upDateData","isLoading","_embedded","employees","length","CircularProgress","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","TableFooter","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7831634f.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      marginTop: theme.spacing(7),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(3)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\"\n    }\n  }));\n\nexport default function AddEmployee() {\n    const classes = useStyles();\n    const [firstLoad, setLoad] = React.useState(true);\n  \n    const [selectedDate, setSelectedDate] = React.useState(\n      new Date(\"1998-04-02T21:11:54\")\n    );\n    const [name, setName] = React.useState(\"\");\n    const [department, setDepartment] = React.useState(\"\");\n    const [gender, setGender] = React.useState(\"\");\n  \n    const handleDateChange = event => {\n       \n        setSelectedDate(new Date(event.target.value))\n    };\n\n    const handleNameChange = event => setName(event.target.value);\n    const handlDepartmentChange = event => setDepartment(event.target.value);\n    const handleGenderChange = event => setGender(event.target.value);\n  \n    const [message, setMessage] = React.useState(\"Nothing saved in the session\");\n  \n    async function sampleFunc(toInput) {\n      const response = await fetch(\"/api/employees\", {\n        method: \"POST\", \n        mode: \"cors\",\n        cache: \"no-cache\", \n        credentials: \"same-origin\", \n        headers: {\n          \"Content-Type\": \"application/json\"\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: \"follow\", \n        referrerPolicy: \"no-referrer\", \n        body: JSON.stringify(toInput) \n      });\n      let body = await response.json();\n      console.log(body.id);\n      setMessage(body.id ? \"Data sucessfully updated\" : \"Data updation failed\");\n    }\n  \n    const handleSubmit = (event,variables) => {\n\n        event.preventDefault()\n      const toInput = { name, department, gender, dob: selectedDate };\n      sampleFunc(toInput);\n      setName(\"\");\n      setDepartment(\"\");\n      setGender(\"\");\n    };\n  \n    if (firstLoad) {\n      setLoad(false);\n    }\n  \n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <GroupIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Employee Directory\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  value={name}\n                  label=\"Name\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  onChange={handleNameChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"department\"\n                  name=\"department\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  value={department}\n                  id=\"department\"\n                  label=\"Department\"\n                  onChange={handlDepartmentChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"gender\"\n                  value={gender}\n                  label=\"Gender\"\n                  name=\"gender\"\n                  autoComplete=\"gender\"\n                  onChange={handleGenderChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"date\"\n                  label=\"Date of birth\"\n                  type=\"date\"\n                  defaultValue=\"1998-04-02\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  onChange={handleDateChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n            \n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Save\n            </Button>\n  \n            <Grid container justify=\"center\">\n              <Grid item>\n                <Link to=\"/view\">View Employee Records</Link>\n              </Grid>\n            </Grid>\n          </form>\n          <Typography style={{ margin: 7 }} variant=\"body1\">\n            Status: {message}\n          </Typography>\n        </div>\n      </Container>\n    );\n  }","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { TableFooter } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n      minWidth: 600\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      margin: `10px`,\n      height: \"100%\",\n      width: \"99%\",\n      marginTop: theme.spacing(7)\n    },\n    link: {\n      color: \"rgba(0,0,0,0.65)\",\n      textDecoration: \"none\",\n      marginLeft: \"10%\",\n      alignSelf: \"flex-start\",\n      \"&:hover\": {\n        color: \"rgba(0,0,0,1)\"\n      }\n    }\n  }));\n  \nexport default function SimpleTable() {\n    const classes = useStyles();\n  \n    const [data, upDateData] = React.useState([]);\n    const [firstLoad, setLoad] = React.useState(true);\n    let isLoading = true;\n  \n    async function sampleFunc() {\n      let response = await fetch(\"/api/employees\");\n      let body = await response.json();\n      upDateData(body._embedded.employees);\n    }\n  \n    if (firstLoad) {\n      sampleFunc();\n      setLoad(false);\n    }\n  \n    if (data.length > 0) isLoading = false;\n  \n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <GroupIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Employee Directory\n        </Typography>\n  \n        {isLoading ? (\n          <CircularProgress />\n        ) : (\n          <TableContainer\n            style={{ width: \"80%\", margin: \"0 10px\" }}\n            component={Paper}\n          >\n           \n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Name</TableCell>\n                  <TableCell align=\"center\">Department</TableCell>\n                  <TableCell align=\"center\">Gender</TableCell>\n                  <TableCell align=\"center\">Dob</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data?.map(row => (\n                  <TableRow key={row.name}>\n                    <TableCell align=\"center\">{row.name}</TableCell>\n                    <TableCell align=\"center\">{row.department}</TableCell>\n                    <TableCell align=\"center\">{row.gender}</TableCell>\n                    <TableCell align=\"center\">{row.dob}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n              \n              </TableFooter>\n            </Table>\n          </TableContainer>\n        )}\n        <Link className={classes.link} to=\"/\">\n          <Typography align=\"left\">\n            &#x2190; Head back to save data\n          </Typography>\n        </Link>\n      </div>\n    );\n  }","import React from 'react';\n\nimport './App.css';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport AddEmployee from './components/AddEmployee';\nimport SimpleTable from './components/Table';\nfunction App() {\n  return (\n    <Router>\n    <Route exact path=\"/\" component={AddEmployee} />\n    <Route exact path=\"/view\" component={SimpleTable} />\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}